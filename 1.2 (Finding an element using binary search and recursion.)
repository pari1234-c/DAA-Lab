
#include <stdio.h>

#define MAX 100


void read(int arr[], int *n);
void bubbleSort(int arr[], int n);
void display(int arr[], int n);
int binarySearch(int arr[], int low, int high, int key);

int main() {
    int arr[MAX], n, key, result;

    
    read(arr, &n);

    
    bubbleSort(arr, n);

    
    printf("\nSorted Array: ");
    display(arr, n);

    
    printf("\nEnter the element to search: ");
    scanf("%d", &key);

    
    result = binarySearch(arr, 0, n - 1, key);

  
    if (result != -1)
        printf("Element %d found at position %d.\n", key, result + 1);  
    else
        printf("Element %d not found in the array.\n", key);

    return 0;
}


void read(int arr[], int *n) {
    int i;
    printf("Enter the number of elements: ");
    scanf("%d", n);
    printf("Enter %d elements:\n", *n);
    for (i = 0; i < *n; i++) {
        scanf("%d", &arr[i]);
    }
}


void bubbleSort(int arr[], int n) {
    int i, j, temp;
    for (i = 0; i < n - 1; i++) {
        for (j = 0; j < n - 1 - i; j++) {
            if (arr[j] > arr[j + 1]) {
                // Swap arr[j] and arr[j+1]
                temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
}


void display(int arr[], int n) {
    int i;
    for (i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}


int binarySearch(int arr[], int low, int high, int key) {
    if (low > high)
        return -1; 

    int mid = (low + high) / 2;

    if (arr[mid] == key)
        return mid;
    else if (key < arr[mid])
        return binarySearch(arr, low, mid - 1, key);
    else
        return binarySearch(arr, mid + 1, high, key);
}
